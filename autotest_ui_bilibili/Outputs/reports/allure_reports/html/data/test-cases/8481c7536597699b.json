{"uid":"8481c7536597699b","name":"test_bilibili_login","fullName":"TestCase.test_login.TestChannel#test_bilibili_login","historyId":"e32cd6d7e78f38254b1b58e86ecc6253","time":{"start":1726485173326,"stop":1726485173326,"duration":0},"description":"\n        b站登录模块正向测试\n        ","descriptionHtml":"<pre><code>    b站登录模块正向测试\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=128.0.6613.138)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6FB13B632+29090]\n\t(No symbol) [0x00007FF6FB0AE6E9]\n\t(No symbol) [0x00007FF6FAF6B1CA]\n\t(No symbol) [0x00007FF6FAF3FAF5]\n\t(No symbol) [0x00007FF6FAFEE2E7]\n\t(No symbol) [0x00007FF6FB005EE1]\n\t(No symbol) [0x00007FF6FAFE6493]\n\t(No symbol) [0x00007FF6FAFB09B1]\n\t(No symbol) [0x00007FF6FAFB1B11]\n\tGetHandleVerifier [0x00007FF6FB45883D+3294125]\n\tGetHandleVerifier [0x00007FF6FB4A4423+3604371]\n\tGetHandleVerifier [0x00007FF6FB49A2E7+3563095]\n\tGetHandleVerifier [0x00007FF6FB1F6F16+797318]\n\t(No symbol) [0x00007FF6FB0B986F]\n\t(No symbol) [0x00007FF6FB0B5454]\n\t(No symbol) [0x00007FF6FB0B55E0]\n\t(No symbol) [0x00007FF6FB0A4A7F]\n\tBaseThreadInitThunk [0x00007FFF4245257D+29]\n\tRtlUserThreadStart [0x00007FFF4476AF28+40]","statusTrace":"@pytest.fixture(scope=\"class\")\n    def access_web():\n        # # 创建 chrome_options 对象\n        # chrome_options = Options()\n        # # 设置 detach 选项为 True\n        # chrome_options.add_experimental_option(\"detach\", True)\n        #\n        # # 前置：打开浏览器\n        # # 修改页面加载策略\n        # desired_capabilities = DesiredCapabilities.CHROME\n        # # 注释这两行会导致最后输出结果的延迟，即等待页面加载完成再输出;该行的作用是不等待页面完全加载，立即返回控制权给程序，可提高执行速度，但可能导致获取的内容不完整\n        # desired_capabilities[\"pageLoadStrategy\"] = \"none\"\n        #\n        # # 较新的 Selenium 版本中，推荐使用 Service 类来管理 WebDriver 的服务\n        # driver = webdriver.Chrome(options=chrome_options, service=Service())\n        # driver.get(\"https://passport.bilibili.com/login\")\n        # driver.maximize_window()\n        # driver.implicitly_wait(10)\n        #\n        # # 返回对象\n        # yield driver\n        # # 后置：关闭浏览器\n        # # driver.quit()\n        driver = global_driver.get_driver()\n>       driver.get(\"https://passport.bilibili.com/login\")\n\nTestCase\\conftest.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000138C641BA90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6FB0A4A7F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF4245257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF4476AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=128.0.6613.138)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6FB13B632+29090]\nE       \t(No symbol) [0x00007FF6FB0AE6E9]\nE       \t(No symbol) [0x00007FF6FAF6B1CA]\nE       \t(No symbol) [0x00007FF6FAF3FAF5]\nE       \t(No symbol) [0x00007FF6FAFEE2E7]\nE       \t(No symbol) [0x00007FF6FB005EE1]\nE       \t(No symbol) [0x00007FF6FAFE6493]\nE       \t(No symbol) [0x00007FF6FAFB09B1]\nE       \t(No symbol) [0x00007FF6FAFB1B11]\nE       \tGetHandleVerifier [0x00007FF6FB45883D+3294125]\nE       \tGetHandleVerifier [0x00007FF6FB4A4423+3604371]\nE       \tGetHandleVerifier [0x00007FF6FB49A2E7+3563095]\nE       \tGetHandleVerifier [0x00007FF6FB1F6F16+797318]\nE       \t(No symbol) [0x00007FF6FB0B986F]\nE       \t(No symbol) [0x00007FF6FB0B5454]\nE       \t(No symbol) [0x00007FF6FB0B55E0]\nE       \t(No symbol) [0x00007FF6FB0A4A7F]\nE       \tBaseThreadInitThunk [0x00007FFF4245257D+29]\nE       \tRtlUserThreadStart [0x00007FFF4476AF28+40]\n\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"sensitive_url","time":{"start":1726485173327,"stop":1726485173327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"base_url","time":{"start":1726485173327,"stop":1726485173327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"_verify_url","time":{"start":1726485173327,"stop":1726485173327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"access_web","time":{"start":1726485173327,"stop":1726485173328,"duration":1},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=128.0.6613.138)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6FB13B632+29090]\n\t(No symbol) [0x00007FF6FB0AE6E9]\n\t(No symbol) [0x00007FF6FAF6B1CA]\n\t(No symbol) [0x00007FF6FAF3FAF5]\n\t(No symbol) [0x00007FF6FAFEE2E7]\n\t(No symbol) [0x00007FF6FB005EE1]\n\t(No symbol) [0x00007FF6FAFE6493]\n\t(No symbol) [0x00007FF6FAFB09B1]\n\t(No symbol) [0x00007FF6FAFB1B11]\n\tGetHandleVerifier [0x00007FF6FB45883D+3294125]\n\tGetHandleVerifier [0x00007FF6FB4A4423+3604371]\n\tGetHandleVerifier [0x00007FF6FB49A2E7+3563095]\n\tGetHandleVerifier [0x00007FF6FB1F6F16+797318]\n\t(No symbol) [0x00007FF6FB0B986F]\n\t(No symbol) [0x00007FF6FB0B5454]\n\t(No symbol) [0x00007FF6FB0B55E0]\n\t(No symbol) [0x00007FF6FB0A4A7F]\n\tBaseThreadInitThunk [0x00007FFF4245257D+29]\n\tRtlUserThreadStart [0x00007FFF4476AF28+40]\n\n","statusTrace":"  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\_pytest\\fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\_pytest\\fixtures.py\", line 890, in call_fixture_func\n    fixture_result = next(generator)\n  File \"F:\\GitHub\\autotest_ui_bilibili\\autotest_ui_bilibili\\TestCase\\conftest.py\", line 48, in access_web\n    driver.get(\"https://passport.bilibili.com/login\")\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 363, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"severity","value":"[normal]"},{"name":"story","value":"正向登录测试"},{"name":"feature","value":"模块：b站登录"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestChannel"},{"name":"host","value":"SEVEN"},{"name":"thread","value":"4124-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d99b2a7b094bf531","status":"failed","statusDetails":"AssertionError: assert '账号登录' == '登录验证'\n  \n  - 登录验证\n  + 账号登录","time":{"start":1726485159055,"stop":1726485172223,"duration":13168}},{"uid":"d48590289a6cc664","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))","time":{"start":1726485122790,"stop":1726485157436,"duration":34646}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"8481c7536597699b.json","parameterValues":[]}
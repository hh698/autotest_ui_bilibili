{"name": "test_bilibili_login1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"geetest_commit_tip\">...</div> is not clickable at point (1377, 827). Other element would receive the click: <div class=\"geetest_panel\">...</div>\n  (Session info: chrome=130.0.6723.117)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7B0DBFDA5+29557]\n\t(No symbol) [0x00007FF7B0D32240]\n\t(No symbol) [0x00007FF7B0BEB6EA]\n\t(No symbol) [0x00007FF7B0C476EE]\n\t(No symbol) [0x00007FF7B0C4513C]\n\t(No symbol) [0x00007FF7B0C42608]\n\t(No symbol) [0x00007FF7B0C4181A]\n\t(No symbol) [0x00007FF7B0C336CE]\n\t(No symbol) [0x00007FF7B0C674FA]\n\t(No symbol) [0x00007FF7B0C33006]\n\t(No symbol) [0x00007FF7B0C67710]\n\t(No symbol) [0x00007FF7B0C888A3]\n\t(No symbol) [0x00007FF7B0C672A3]\n\t(No symbol) [0x00007FF7B0C312DF]\n\t(No symbol) [0x00007FF7B0C32451]\n\tGetHandleVerifier [0x00007FF7B10EDCBD+3363469]\n\tGetHandleVerifier [0x00007FF7B1139B47+3674391]\n\tGetHandleVerifier [0x00007FF7B112EAEB+3629243]\n\tGetHandleVerifier [0x00007FF7B0E7FC66+815670]\n\t(No symbol) [0x00007FF7B0D3D6EF]\n\t(No symbol) [0x00007FF7B0D392B4]\n\t(No symbol) [0x00007FF7B0D39450]\n\t(No symbol) [0x00007FF7B0D281FF]\n\tBaseThreadInitThunk [0x00007FFBA7AF257D+29]\n\tRtlUserThreadStart [0x00007FFBA9D8AF08+40]", "trace": "self = <TestCase.test_login.TestChannel object at 0x000001DDC3FA3130>\naccess_web = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3693628bafb8ff59554343d7351147f5\")>\n\n    @pytest.mark.smoke\n    @allure.severity(severity_level=\"[normal]\")\n    @allure.story(\"正向登录测试，账号密码均正确\")\n    def test_bilibili_login1(self, access_web):\n        with allure.step(\"步骤1：登录\"):\n            self.reader = ReadLoginYaml()  # 创建 ReadLoginYaml 的实例\n            phone_number = self.reader.get_phone_number()\n            phone_password = self.reader.get_phone_password()\n            bp = BilibiliLoginPage(access_web)  # 传递refresh_web得到的driver\n>           page_title = bp.login_process(phone_number, phone_password)\n\ntest_login.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\bilibili_login_page.py:164: in login_process\n    self.click_confirm_button()\n..\\PageObjects\\bilibili_login_page.py:147: in click_confirm_button\n    self.wait_click_ele(self.confirmCode_button)\n..\\Common\\basepage.py:48: in wait_click_ele\n    ele.click()\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DDC3FA37C0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7B0D281FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBA7AF257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBA9D8AF08+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"geetest_commit_tip\">...</div> is not clickable at point (1377, 827). Other element would receive the click: <div class=\"geetest_panel\">...</div>\nE         (Session info: chrome=130.0.6723.117)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7B0DBFDA5+29557]\nE       \t(No symbol) [0x00007FF7B0D32240]\nE       \t(No symbol) [0x00007FF7B0BEB6EA]\nE       \t(No symbol) [0x00007FF7B0C476EE]\nE       \t(No symbol) [0x00007FF7B0C4513C]\nE       \t(No symbol) [0x00007FF7B0C42608]\nE       \t(No symbol) [0x00007FF7B0C4181A]\nE       \t(No symbol) [0x00007FF7B0C336CE]\nE       \t(No symbol) [0x00007FF7B0C674FA]\nE       \t(No symbol) [0x00007FF7B0C33006]\nE       \t(No symbol) [0x00007FF7B0C67710]\nE       \t(No symbol) [0x00007FF7B0C888A3]\nE       \t(No symbol) [0x00007FF7B0C672A3]\nE       \t(No symbol) [0x00007FF7B0C312DF]\nE       \t(No symbol) [0x00007FF7B0C32451]\nE       \tGetHandleVerifier [0x00007FF7B10EDCBD+3363469]\nE       \tGetHandleVerifier [0x00007FF7B1139B47+3674391]\nE       \tGetHandleVerifier [0x00007FF7B112EAEB+3629243]\nE       \tGetHandleVerifier [0x00007FF7B0E7FC66+815670]\nE       \t(No symbol) [0x00007FF7B0D3D6EF]\nE       \t(No symbol) [0x00007FF7B0D392B4]\nE       \t(No symbol) [0x00007FF7B0D39450]\nE       \t(No symbol) [0x00007FF7B0D281FF]\nE       \tBaseThreadInitThunk [0x00007FFBA7AF257D+29]\nE       \tRtlUserThreadStart [0x00007FFBA9D8AF08+40]\n\nD:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "步骤1：登录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"geetest_commit_tip\">...</div> is not clickable at point (1377, 827). Other element would receive the click: <div class=\"geetest_panel\">...</div>\n  (Session info: chrome=130.0.6723.117)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7B0DBFDA5+29557]\n\t(No symbol) [0x00007FF7B0D32240]\n\t(No symbol) [0x00007FF7B0BEB6EA]\n\t(No symbol) [0x00007FF7B0C476EE]\n\t(No symbol) [0x00007FF7B0C4513C]\n\t(No symbol) [0x00007FF7B0C42608]\n\t(No symbol) [0x00007FF7B0C4181A]\n\t(No symbol) [0x00007FF7B0C336CE]\n\t(No symbol) [0x00007FF7B0C674FA]\n\t(No symbol) [0x00007FF7B0C33006]\n\t(No symbol) [0x00007FF7B0C67710]\n\t(No symbol) [0x00007FF7B0C888A3]\n\t(No symbol) [0x00007FF7B0C672A3]\n\t(No symbol) [0x00007FF7B0C312DF]\n\t(No symbol) [0x00007FF7B0C32451]\n\tGetHandleVerifier [0x00007FF7B10EDCBD+3363469]\n\tGetHandleVerifier [0x00007FF7B1139B47+3674391]\n\tGetHandleVerifier [0x00007FF7B112EAEB+3629243]\n\tGetHandleVerifier [0x00007FF7B0E7FC66+815670]\n\t(No symbol) [0x00007FF7B0D3D6EF]\n\t(No symbol) [0x00007FF7B0D392B4]\n\t(No symbol) [0x00007FF7B0D39450]\n\t(No symbol) [0x00007FF7B0D281FF]\n\tBaseThreadInitThunk [0x00007FFBA7AF257D+29]\n\tRtlUserThreadStart [0x00007FFBA9D8AF08+40]\n\n", "trace": "  File \"F:\\GitHub\\autotest_ui_bilibili\\autotest_ui_bilibili\\TestCase\\test_login.py\", line 25, in test_bilibili_login1\n    page_title = bp.login_process(phone_number, phone_password)\n  File \"F:\\GitHub\\autotest_ui_bilibili\\autotest_ui_bilibili\\PageObjects\\bilibili_login_page.py\", line 164, in login_process\n    self.click_confirm_button()\n  File \"F:\\GitHub\\autotest_ui_bilibili\\autotest_ui_bilibili\\PageObjects\\bilibili_login_page.py\", line 147, in click_confirm_button\n    self.wait_click_ele(self.confirmCode_button)\n  File \"F:\\GitHub\\autotest_ui_bilibili\\autotest_ui_bilibili\\Common\\basepage.py\", line 48, in wait_click_ele\n    ele.click()\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Users\\Huang\\PycharmProjects\\autotest_ui_bilibili\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1731232880145, "stop": 1731232886008}], "attachments": [{"name": "log", "source": "15c5282a-7dfe-4fae-b26d-f76999e02f87-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a1148a9b-7bdd-4206-8b55-d310e2a07f7f-attachment.txt", "type": "text/plain"}], "start": 1731232880145, "stop": 1731232886011, "uuid": "28357c08-f37f-46a8-a8d8-20dc5e6a0e27", "historyId": "fc477441db4918a09321559896692cef", "testCaseId": "fc477441db4918a09321559896692cef", "fullName": "TestCase.test_login.TestChannel#test_bilibili_login1", "labels": [{"name": "feature", "value": "模块：b站登录"}, {"name": "severity", "value": "[normal]"}, {"name": "story", "value": "正向登录测试，账号密码均正确"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestChannel"}, {"name": "host", "value": "SEVEN"}, {"name": "thread", "value": "19036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_login"}]}